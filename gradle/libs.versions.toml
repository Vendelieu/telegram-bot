[versions]
ktor = "2.3.7"
logging = "5.3.1"
datetime = "0.5.0"
serialization = "1.6.2"
stately = "2.0.0"

kotlin = "1.9.22"
coroutines = "1.7.3"
dokka = "1.9.10"
kotlinter = "4.1.1"
deteKT = "1.23.4"

kotest = "5.8.0"
mockk = "1.13.9"
junit = "5.10.1"
kover = "0.7.5"

ksp = "1.9.22-1.0.17"
poet = "1.16.0"

[libraries]
# ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-winhttp = { module = "io.ktor:ktor-client-winhttp", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }

# logging
logging = { module = "com.soywiz.korge:korlibs-logger", version.ref = "logging" }

kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
stately = { module = "co.touchlab:stately-concurrent-collections", version.ref = "stately" }

# test
test-kotest-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
test-kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
test-junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
test-ktor-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
dokka-base = { module = "org.jetbrains.dokka:dokka-base", version.ref = "dokka" }

ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
poet = { module = "com.squareup:kotlinpoet", version.ref = "poet" }
poet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "poet" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
ktlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }
deteKT = { id = "io.gitlab.arturbosch.detekt", version.ref = "deteKT" }
