[versions]
ktor = "2.3.12"
logging = "2.0.4"
logback = "1.5.6"

datetime = "0.6.0"
serialization = "1.7.1"
stately = "2.0.7"

kotlin = "2.0.0"
coroutines = "1.8.1"
dokka = "1.9.20"
kotlinter = "4.4.1"
deteKT = "1.23.6"

kotest = "5.9.1"
mockk = "1.13.12"
kover = "0.8.3"
krypto = "4.0.10"
sslcontext = "8.3.6"
spring = "3.3.2"

ksp = "2.0.0-1.0.24"
poet = "1.18.1"

binvalid = "0.16.3"

[libraries]
# ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-curl = { module = "io.ktor:ktor-client-curl", version.ref = "ktor" }
ktor-client-winhttp = { module = "io.ktor:ktor-client-winhttp", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }

# logging
logging = { module = "co.touchlab:kermit", version.ref = "logging" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

kotlin-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
stately = { module = "co.touchlab:stately-concurrent-collections", version.ref = "stately" }
krypto = { module = "com.soywiz.korlibs.krypto:krypto", version.ref = "krypto" }

# test
test-kotest-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }
test-kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
dokka-base = { module = "org.jetbrains.dokka:dokka-base", version.ref = "dokka" }

ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
poet = { module = "com.squareup:kotlinpoet", version.ref = "poet" }
poet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "poet" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

ssl-utils = { module = "io.github.hakky54:sslcontext-kickstart-for-pem", version.ref = "sslcontext" }
spring-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring" }

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-js-plain-objects = { id = "org.jetbrains.kotlin.plugin.js-plain-objects", version.ref = "kotlin" }
kotlin-compatability-validator = { id = "org.jetbrains.kotlinx.binary-compatibility-validator", version.ref = "binvalid" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
ktlinter = { id = "org.jmailen.kotlinter", version.ref = "kotlinter" }
deteKT = { id = "io.gitlab.arturbosch.detekt", version.ref = "deteKT" }
